---
title: "shell"
format: html
editor: visual
---

Shell 101

Es gibt zwei Arten, um mit dem Computer zu interagieren bzw. ihn zu nutzen: über ein **G**raphical **U**ser **I**nterface (GUI) oder, etwas direkter, über die [Kommandozeile](https://de.wikipedia.org/wiki/Kommandozeile)[^1]. Um eine Datei "Bild1.jpg" im Ordner "Bilder" zu löschen, öffnet man den Explorer (Windows) oder den Finder (Mac), klickt sich zum Ordner "Bilder", macht einen Rechtsklick auf die zu löschende Datei "Bild1.jpg", klickt "In den Papierkorb legen" oder zieht die Datei mit der Maus direkt dorthin. Man kann dieselbe Aktion als Kommando eintippen: Man öffnet eine Powershell (Windows) oder das Terminal (Mac), navigiert mit Texteingabe zum entsprechenden Ordner, bspw. `cd Dokumente/Bilder` und gibt dort das Kommando `rm "Datei.jpg"` ein, das mit der Entertaste ausgeführt wird.

[^1]: Kommandozeile/command line, bash, shell, prompt finden sich oft als synonym genutzte Begriffe für Command Line Interfaces. Auf UNIX-basierten Betriebssystemen wie Mac OS und Linux ist das Terminal als Interface weit verbreitet; für Details: https://en.wikipedia.org/wiki/Command-line_interface#History. Windowsnutzer:innen kommen mit der Powershell ganz gut zurecht, es empfiehlt sich eventuell die Installation von [Cygwin](https://en.wikipedia.org/wiki/Cygwin) oder [MinGW](https://en.wikipedia.org/wiki/MinGW), um mit einem UNIX-basierten Interface arbeiten zu können.

`(base) serina00@dg-19-mac-02 Bilder % rm "Datei.jpg"`

Die beiden Vorgehensweisen unterscheiden sich dabei in drei Punkten:

1.  Das Kommando `rm` ist endgültig, die Datei ist ohne Übergangszeit im Papierkorb gelöscht.
2.  Das Kommando lässt sich relativ simpel auf eine Vielzahl von Dokumenten anwenden, wobei ganz unterschiedliche Bedingungen beachtet werden können, und es lässt sich mit anderen Kommandos verbinden.
3.  Terminal sieht k3wl aus.

Bevor wir den zweiten -- und für unsere Arbeit hilfreichsten -- Unterschied genauer anschauen, kurz zur Kommandozeile:

In einem Terminal/Shell können Befehle/Programme ausgeführt werden, die auf der Datenstrukturebene stattfinden -- wie beispielsweise das Löschen einer Datei, `rm Dateiname.xyz`, oder das Erstellen eines Ordners, `mkdir NeuerOrdner`. Oder aber Operationen auf Dateninhaltsebene -- wie beispielsweise das Suchen eines bestimmten Begriffs in einer Textdatei, `grep Begriff Textdatei.txt`, oder das Auszählen mehrerer Begriffe und das Speichern des Ergebnisses in einer neuen Datei, `grep -Ec "Begriff1|Begriff2" Textdatei.txt > Ergebnisse.txt`.

Woher weiss Ihre Shell aber, was sie ausführen soll, wenn Sie `rm` oder `grep` eintippen? Es gibt zahlreiche Shell-Programme, die bereits auf Ihrem System vorinstalliert sind, und mit denen Sie vieles tun können -- öffnen Sie Ihre Shell und tippen Sie `date` ein: Das aktuelle Datum mit Uhrzeit erscheint. Ihre Shell sucht nach dem ersten Argument, dem Befehl, im Filesystem des Computers, und wenn sie fündig wird, führt sie eine Aktion mit den entsprechenden Parametern aus.

> tmi: Wenn Sie `echo $PATH` im Terminal eingeben, sehen Sie eine Auflistung der Orte, an denen nach Befehlen gesucht wird. Tippen Sie `which date` ein und drücken Sie 'Enter', um zu sehen, wo das Programm "date" in Ihrem Computer liegt.

Wenn Sie einen Befehl eintippen, den es nicht gibt bzw. für den es noch kein installiertes Programm auf Ihrem Computer gibt, bekommen Sie eine simple Fehlermeldung:

`(base) serina00@dg-19-mac-02 EK-dh % nonsense`

`command not found: nonsense`

Das aktuelle Datum wird Ihnen wahrscheinlich auch in Ihrer Toolbar angezeigt, und einen neuen Ordner können Sie per Rechtsklick erstellen, dazu brauchen Sie das Terminal nicht unbedingt. Um einen Begriff in einem Textdokument zu finden und alle Vorkommen zu zählen, können Sie das Dokument öffnen, `Strg-F` drücken, den Begriff eingeben und das Ergebnis sehen. Wenn Sie nach mehreren Begriffen suchen wollen, müssen Sie dieselbe Aktion zweimal ausführen: `Strg-F`, Begriff 2.

Wenn Sie wissen möchten, wie häufig Arthur Dent, Zaphod Beeblebrox, Slartibartfast und Mrs Enid Kapelsen in den sechs Bänden von "[The Hitchhiker's Guide to the Galaxy](https://en.wikipedia.org/wiki/The_Hitchhiker%27s_Guide_to_the_Galaxy)" genannt werden, müssen Sie, wenn Sie den [Volltext](https://archive.org/stream/TheultimateHitchhikersGuide/The%20Hitchhiker%27s%20Guide%20To%20The%20Galaxy_djvu.txt) heruntergeladen haben, für jeden Namen eine Suche ausführen, mit `Strg-F`. Bei der Suche nach Personen mit Vor- und Nachnamen wie "Arthur Dent" suchen Sie nach "Arthur", nach "Dent" und nach "Arthur Dent" und ziehen alle "Arthur Dent"-Treffer von den übrigen Treffern ab, um nichts doppelt zu zählen und ihre Suchergebnisse zu verfälschen. Die Trefferzahl all Ihrer Suchanfragen schreiben Sie in ein neues Dokument.

Sie können dasselbe auch mit dem Terminal machen und einige der Built-in-Programme nutzen: Sie bewegen sich mit `cd`, `change directory`, in den Ordner (directory), in dem Ihre Textdatei liegt:

`(base) serina00@dg-19-mac-02 serina00 % cd Documents/progr/EK_dh/Hitchhiker`

(Um zu prüfen, was dort liegt, können Sie im Terminal `ls` (für `list`) eingeben, bzw. in der Powershell `dir` (für `directory`)

`(base) serina00@dg-19-mac-02 Hitchhiker % ls hitchhiker_fulltext`

Mit einer Zeile können Sie die in einem Texteditor ausgeführten Suchvorgänge mit `grep` (Global Regular Expression Print) ausführen und die Ergebnisse mit `>` in eine neue Datei schreiben:
